#!/usr/bin/env false zsh
# -*- coding: utf-8 -*-
    # shellcheck shell=bash
    # shellcheck source=/dev/null
    # shellcheck disable=2178

#? ######################## skeptycal.com
  SET_DEBUG=${SET_DEBUG:-0}  # set to 1 for verbose testing
  BASH_SOURCE="${BASH_SOURCE:-$0}" # to ease the transition to zsh
#? ######################## Shell settings
  declare -x LANG && LANG='en_US.UTF-8'
  declare -x LC_ALL && LC_ALL='en_US.UTF-8'
  declare -ix CGO_ENABLED && CGO_ENABLED=1
  declare -x LOCAL_IP && LOCAL_IP="$(ipconfig getifaddr en0)"
  declare -x LDFLAGS && LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
  # LDFLAGS="-L/usr/local/opt/zlib/lib"
  # CPPFLAGS="-I/usr/local/opt/zlib/include"
  declare -x ARCHFLAGS && ARCHFLAGS="-arch x86_64"
  declare -ix HISTSIZE && HISTSIZE=32768
  declare -ix HISTFILESIZE && HISTFILESIZE="${HISTSIZE}"
  declare -x HISTCONTROL && HISTCONTROL='ignoreboth'

  # default shell editor
  [[ -n $SSH_CONNECTION ]] && declare -x EDITOR='nano' || declare -x EDITOR='nano'

  # get the number of CPU cores
  declare -ix number_of_cores && number_of_cores=$(sysctl -n hw.ncpu)
  # the CPU model and speed
  # e.g. Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz
  declare -x CPU && CPU=$(sysctl -n machdep.cpu.brand_string)

  # support colors in less
  export LESS_TERMCAP_mb=$'\E[01;31m'
  export LESS_TERMCAP_md=$'\E[01;31m'
  export LESS_TERMCAP_me=$'\E[0m'
  export LESS_TERMCAP_se=$'\E[0m'
  export LESS_TERMCAP_so=$'\E[01;44;33m'
  export LESS_TERMCAP_ue=$'\E[0m'
  export LESS_TERMCAP_us=$'\E[01;32m'

#? ######################## Load Environ Vars
  declare -x SH_KEY_PATH && SH_KEY_PATH="${HOME}/.ssh/rsa_id"
  . "${HOME}/.dotfiles/.homebrew_github_private.sh"
  . "${HOME}/.dotfiles/.travis_token_private.sh"

#? ######################## Program settings

  declare -x GIT_DISCOVERY_ACROSS_FILESYSTEM && GIT_DISCOVERY_ACROSS_FILESYSTEM=1

  # google cloud SDK
  # The next line updates PATH for the Google Cloud SDK.
  [ -f '/Users/skeptycal/google-cloud-sdk/path.zsh.inc' ] && . '/Users/skeptycal/google-cloud-sdk/path.zsh.inc'
  # The next line enables shell command completion for gcloud.
  [ -f '/Users/skeptycal/google-cloud-sdk/completion.zsh.inc' ] && . '/Users/skeptycal/google-cloud-sdk/completion.zsh.inc'

  # haskell config
  [ -f "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env" ] && source "${GHCUP_INSTALL_BASE_PREFIX:=$HOME}/.ghcup/env"

  # brew install jump
  # https://github.com/gsamokovarov/jump
  eval "$(jump shell)"

  # pyenv
  [[ $(command -v pyenv >/dev/null) ]] && eval "$(pyenv init -)"
  [[ $(command -v pyenv-virtualenv-init >/dev/null) ]] && eval "$(pyenv virtualenv-init -)"

#? ######################## Utilities
  declare -x TESSDATA_PREFIX
  TESSDATA_PREFIX="/Users/skeptycal/Documents/GitHub/tesseract/tessdata"

  declare -x AZURE_WORKING_DIR
  AZURE_WORKING_DIR="${HOME}/myagent"
  # start Azure
  # cd $AZURE_WORKING_DIR
  # ./svc.sh start
  # cd -

  declare -x MAGICK_HOME
  MAGICK_HOME="/usr/local/Cellar/imagemagick/7.0.8-68"
  # shellcheck disable=2015

#? ######################## Python
  unset PYTHONDONTWRITEBYTECODE
  #   set hash seed to different random number every session
  declare -ix PYTHONHASHSEED && PYTHONHASHSEED=$(shuf -i1-4294967295 -n1)
  declare -x PYTHONIOENCODING && PYTHONIOENCODING='UTF-8'
  # declare -x PKG_CONFIG_PATH && PKG_CONFIG_PATH="/usr/local/opt/python@3.8/lib/pkgconfig"

  #   python sucks ... virtual environments suck ...
  #   someone should find a better way to do this ... it's so stupid
  #   pipenv is the best alternative for now
  # declare -x WORKON_HOME && WORKON_HOME="${HOME}/.virtualenvs"
  declare -x PROJECT_HOME && PROJECT_HOME="${HOME}/Documents/coding/"

#? ######################## emsdk
  # Emscripten is a toolchain for compiling to asm.js and WebAssembly, built using LLVM,
  #   that lets you run C and C++ on the web at near-native speed without plugins.
  #   https://emscripten.org/
  declare -x EMSDK
  EMSDK="/Users/skeptycal/emsdk"
  declare -x EM_CONFIG
  EM_CONFIG="/Users/skeptycal/.emscripten"
  declare -x EMSDK_NODE
  EMSDK_NODE="/Users/skeptycal/emsdk/node/12.9.1_64bit/bin/node"

#? ######################## Java
    declare -x JAVA_HOME
    JAVA_HOME="$(/usr/libexec/java_home)"
    declare -x M2_HOME
    M2_HOME="/usr/share/apache-maven-3.6.0"

#? ######################## Node
  declare -x NODE_REPL_HISTORY
  NODE_REPL_HISTORY="${HOME}/.node_history"
  declare -ix NODE_REPL_HISTORY_SIZE
  NODE_REPL_HISTORY_SIZE=32768
  declare -x NODE_REPL_MODE
  NODE_REPL_MODE='sloppy'

#? ######################## Perl
  declare -x PERL_MM_OPT && PERL_MM_OPT="INSTALL_BASE=${HOME}/perl5"
  eval "$(perl -I"$HOME"/perl5/lib/perl5 -Mlocal::lib="$HOME"/perl5)"

#? ######################## Go
  declare -x GOPATH && GOPATH="$HOME/go"

#? ######################## Postgres setup
  declare -x DATABASE_URL && DATABASE_URL="postgres://$(whoami)"

_run_tests() {
    # list current versions of common utilities
    ce "Script source:$MAIN ${BASH_SOURCE[*]}$RESET"
    green "\$LANG is set to $LANG."
    green "\$LOCAL_IP is set to and exported as $LOCAL_IP."
}
main_exports() {
    [[ $SET_DEBUG == 1 ]] && _run_tests "$@"
}

main_exports "$@"
