#!/usr/bin/env bash

# Text blurbs and blobs for zsh functions
#   Helpful to keep scripts clean ...
#   and for localization if needed
[[ -z $MAIN ]] && MAIN=$(echo -en '\001\033[38;5;229m') && export MAIN
[[ -z $GO ]] && GO=$(echo -en '\001\033[38;5;28m') && export GO
[[ -z $RESET ]] && RESET=$(echo -en '\001\033[0m') && export RESET

pretty_usage="\n\n${MAIN}NAME${RESET}\n\tpretty - Use prettier to format all compatible selected files\n\n${MAIN}SYNOPSIS${RESET}\n\tpretty [PATTERN] [-g] [-h]\n\n${MAIN}DESCRIPTION${RESET}\n\tUse prettier <https://prettier.io/> to format all compatible files.\n\tSearches recursively, starting in the current directory. Locates all\n\tcompatible files that match PATTERN and applies Prettier formatting.\n\n\t   PATTERN - glob pattern to choose files; default is everything '*'\n\t-g - search only Git staged files\n\t-h - help (this page)\n\n\t# **************************************************************************\n\t${MAIN}It's Prettier!${RESET}\n\tWorks with your editor:\n\tAtom, Emacs, Espresso, Sublime Text, Vim, Visual Studio, VS Code, WebStorm\n\t# **************************************************************************\n\tWorks with the Tools You Use\n\tVue, Angular, JavaScript, JSX, Flow, TypeScript, JSON, HTML, CSS, Less,\n\tSCSS, Markdown, CommonMark, GitHub-Flavored Markdown, styled-components,\n\tstyled-jsx, GraphQL, GraphQL Schemas, Elm (via elm-format), PostgreSQL,\n\tJava, PHP, Ruby, Swift, TOML, MDX, YAML\n\t# **************************************************************************\n\tAdd prettier to your project(Yarn or NPM):  ${GO}yarn add prettier --dev --exact${RESET}\n\tVerify by running against a file:       ${GO}yarn prettier --write src/index.js${RESET}\n\tRun prettier when commiting files:      ${GO}yarn add pretty-quick husky --dev${RESET}\n\tThen add this config to package.json:\n\t    ${GO}{ "'"husky": { "hooks": { "pre-commit": "pretty-quick --staged"'" } } }${RESET}\n\n"

version_blurb="
$vc_name (skeptycal utilities) $vc_version
Copyright (C) 2019 Michael Treanor <http://www.skeptycal.com>
License MIT <https://opensource.org/licenses/MIT>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Written by Michael Treanor.
If you wish to support the development,
    go to:     skeptycal.com <https://www.github.com/skeptycal>
    or email:  Michael Treanor <skeptycal@gmail.com>
"

dc_version="DirtyClean Version 0.0.2"

dc_usage="NAME\n\tdc - use paramter expansion for pattern matching\n\nSYNOPSIS\n\tdc PARAMETER [PATTERN] [STRING]\n\nDESCRIPTION\n\n\t"'"DirtyClean" uses parameter expansion to perform command line pattern\nmatching. The basic pattern used is:'"\n\n\t\t"'${parameter/pattern/string}'"\n\n\tWhile this can be done on the command line easily, (e.g.)\n\n\t\t"'$ dirty="Ã‚10.41.89.50 "\n\t\t$ clean=${dirty//[^[:digit:].-]/}\n\t\t$ echo "$clean"\n\t\t10.41.89.50\n\n\tIt is handy to have a way to save presets, pipe outputs, or call from\nscripts without the overhead of manipulating variables directly.\n'
