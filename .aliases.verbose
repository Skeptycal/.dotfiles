#!/usr/bin/env bash
################################################################################
# Because I used DOS since I was 5 years old

alias dir='ls'
alias cls='clear'
alias rd=rmdir
###############################################################################
# Python and Environment stuff

alias sba='source bin/activate'

# alias pen='pipenv'
# alias peg='pipenv graph'
# alias pei='pipenv install --python 3.8'
# alias pes='pipenv shell'

# -m mod : run library module as a script (terminates option list)
alias py="python -m "

# Create environment.yml from conda environment
# TODO work in progress ...
# alias cinit="conda env export > environment.yml"
################################################################################
#testing crap I don't know how to do

# npm hot reload server

alias serve="browser-sync start -s -f . --no-notify --host $(ipconfig getifaddr en0) --port 9000"


# from https://github.com/todotxt/todo.txt-cli/wiki/tips-and-tricks
alias todo='$EDITOR ~/.todo'

# alias t='./todo.sh -d /path/to/your/todo.cfg'

# Copy template .gitignore to current directory
alias gi='cp ~/.dotfiles/.gitignore .'
alias ii='cp ~/.dotfiles/.info.cfg'

# Search aliases
alias a="alias | grep \$\1"

# ... for when Melanie forgets to log out
alias hockey="pkill -9 -u \$(id -u melanie)"

# Prefix git to use achievements
alias git="git-achievements"
alias g="git-achievements"

# npm shortcut
alias nis="npm install --save "

# Search history
alias hs="history | grep "

# Launch node watcher
alias watch="nodemon -L ~/Documents/sites"

# Docker shortcut (add options if needed)
alias d="docker "

alias filetree="ls -R | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/'"

# list git alias commands ...
alias gitlist="alias | grep git"

# List mac version info
alias whichmac="uname -a"

# List all open files containing parameter
alias allopen="sudo lsof -i -P | grep $1"

# Unix style tree
# I used Brew Install Tree also ... thus the ftree alias ...
alias ftree="find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'"
#  alias treehere="f(){ if !$1 then $1 = 1; tree -a -F -C -L $1 --dirsfirst --si; unset -f f; }; f"

################################################################################
# Formatting commands

# Trim new lines and copy to clipboard (pipe to <c>)s
# also handy to see error messages
# 	e.g. `cp | c` produces
# 	bracketed-paste-magic:zle:41: not enough arguments for -U
alias c="tr -d '\n' | pbcopy"

# trim command
alias trim="sed -e 's/^[[:space:]]*//g' -e 's/[[:space:]]*\$//g'"

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

# Merge PDF files. Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf="/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py"

# PlistBuddy alias, because sometimes `defaults` just doesn’t cut it
alias plistbuddy="/usr/libexec/PlistBuddy"

# Intuitive map function
# For example, to list all directories that contain a certain file:
# find . -name .gitattributes | map dirname
alias map="xargs -n1"

################################################################################
# System commands

# Find files or directories
alias ff="find . -type f -name "
alias fd="find . -type d -name "

alias now='date +"%T"'
alias nowdate='date +"%m-%d-%Y"'

# Make mount command more readable
alias mount="mount | column -t"
# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
# Canonical hex dump; some systems have this symlinked
command -v hd > /dev/null || alias hd="hexdump -C"
# macOS has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"
# macOS has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"
# Make Grunt print stack traces by default
command -v grunt > /dev/null && alias grunt="grunt --stack"
# Reload the shell (i.e. invoke as a login shell)
alias reload='exec ${SHELL} -l'
# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'
# Enable aliases to be sudo’ed
alias sudo="sudo "
# Get week number
alias week="date +%V"

################################################################################
# Applications

# Google Chrome
alias chrome='/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome'
alias canary='/Applications/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary'

# JavaScriptCore REPL
jscbin='/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc';
[ -e "${jscbin}" ] && alias jsc="${jscbin}";
unset jscbin;

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

################################################################################
###### * Color Coded Directory Listings
ls_usage="\
-A      do not list implied . and ..\
-h      with -l and -s, print sizes like 1K 234M 2G etc.\
-H      follow symbolic links listed on the command line\
-i      print the index number of each file\
-l      use a long listing format\
-m      fill width with a comma separated list of entries\
-R      list subdirectories recursively\
-F      append indicator (one of */=>@|) to entries\
--group-directories-first\
        group directories before files\
"
alias ls="ls --group-directories-first ${colorflag}"
# List normal files in wide format
alias lw="ls -hF --group-directories-first ${colorflag}"
# List normal files in long format
alias ll="ls -lhF --group-directories-first ${colorflag}"
# List *all* files in long format (excluding . and ..)
alias la="ls -lhFA --group-directories-first ${colorflag}"

###### * Filtered Directory Listings
# Show ONLY hidden files (dotfiles)
alias l.="ls -lhFAd .* --group-directories-first ${colorflag}"
# List only directories
alias lsd="ls -lhFA ${colorflag} | grep --color=auto '^d'"

###### * Sorted Directory Listings
# List directory contents Sorted by Access time
alias lsa="ls -lhFAtrs ${colorflag}"
# List all files Sorted by Size: largest last
alias lss="ls -lhFAsrS ${colorflag}"

################################################################################
# Easier directory navigation: .., ..., ...., ....., ~ and -
alias cdc="cd $HOME/Documents/_coding" # Current development projects
alias cdw="cd $HOME/Sites" # Web Dev Server (localhost)
alias db="cd $HOME/Documents/Dropbox"
alias dl="cd $HOME/Downloads"
alias dt="cd $HOME/Desktop"
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
#alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"

# From ~/.oh-my-zsh/lib/directories.zsh
alias -- -='cd -'
alias 1='cd -'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'
################################################################################
# Update and Cleanup

# Get macOS Software Updates, and update installed Ruby gems, Homebrew, npm, and their installed packages
alias update="sudo softwareupdate -i -a; brew update; brew upgrade; brew cleanup; sudo npm install npm -g; sudo npm update -g; sudo gem update --system; sudo gem update; sudo gem cleanup"
# Clean up LaunchServices to remove duplicates in the “Open With” menu
alias lscleanup="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"
# Recursively delete `.DS_Store` files
alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"
# Empty the Trash on all mounted volumes and the main HDD.
# Also, clear Apple’s System Logs to improve shell startup speed.
# Finally, clear download history from quarantine. https://mths.be/bum
alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash; sudo rm -rfv /private/var/log/asl/*.asl; sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

################################################################################
# Network

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
# Show active network interfaces
alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"
# Flush Directory Service cache
alias flush="sudo dscacheutil -flushcache && killall -HUP mDNSResponder"
# Airport CLI alias
alias airport="/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport"
# One of @janmoesen’s ProTip™s
for method in GET HEAD POST PUT DELETE TRACE OPTIONS; do
	alias "${method}'='lwp-request -m '${method}'"
done

################################################################################
# System Features

# Stuff I never really use but cannot delete either because of http://xkcd.com/530/
alias stfu="osascript -e 'set volume output muted true'"
alias pumpitup="osascript -e 'set volume output volume 100'"
# Show/hide hidden files in Finder
alias show="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
alias hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
# Disable Spotlight
alias spotoff="sudo mdutil -a -i off"
# Enable Spotlight
alias spoton="sudo mdutil -a -i on"

################################################################################
# Color output
# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep="grep --color=auto"
alias fgrep="fgrep --color=auto"
alias egrep="egrep --color=auto"

# install  colordiff package :)
alias diff="colordiff"

################################################################################
# Notes

# (1) GNU_Core_Utilities

# GNU utilities bin path
# * replaced and relocated to ~/.dotfiles/.path

# Creating an alias for each is not needed with gnubin in path
# PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# GNU replacements:
# ls /usr/local/opt/coreutils/libexec/gnubin | tr '\n' '\t' | pbcopy
# [	b2sum	base32	base64	basename	cat	chcon	chgrp	chmod	chown	chroot	cksum	comm	cp	csplit	cut	date	dd	df	dir	dircolors	dirname	du	echo	env	expand	expr	factor	false	fmt	fold	groups	head	hostid	id	install	join	kill	link	ln	logname	ls	md5sum	mkdir	mkfifo	mknod	mktemp	mv	nice	nl	nohup	nproc	numfmt	od	paste	pathchk	pinky	pr	printenv	printf	ptx	pwd	readlink	realpath	rm	rmdir	runcon	seq	sha1sum	sha224sum	sha256sum	sha384sum	sha512sum	shred	shuf	sleep	sort	split	stat	stdbuf	stty	sum	sync	tac	tail	tee	test	timeout	touch	tr	true	truncate	tsort	tty	uname	unexpand	uniq	unlink	uptime	users	vdir	wc	who	whoami	yes

################################################################################
# Aliases
# (sorted alphabetically)
#
alias g='git'

alias ga='git add'
alias gaa='git add --all'
alias gapa='git add --patch'
alias gau='git add --update'
alias gav='git add --verbose'
alias gap='git apply'

alias gb='git branch'
alias gba='git branch -a'
alias gbd='git branch -d'
alias gbda='git branch --no-color --merged | command grep -vE "^(\*|\s*(master|develop|dev)\s*$)" | command xargs -n 1 git branch -d'
alias gbD='git branch -D'
alias gbl='git blame -b -w'
alias gbnm='git branch --no-merged'
alias gbr='git branch --remote'
alias gbs='git bisect'
alias gbsb='git bisect bad'
alias gbsg='git bisect good'
alias gbsr='git bisect reset'
alias gbss='git bisect start'

alias gc='git commit -v'
alias gc!='git commit -v --amend'
alias gcn!='git commit -v --no-edit --amend'
alias gca='git commit -v -a'
alias gca!='git commit -v -a --amend'
alias gcan!='git commit -v -a --no-edit --amend'
alias gcans!='git commit -v -a -s --no-edit --amend'
alias gcam='git commit -a -m'
alias gcsm='git commit -s -m'
alias gcb='git checkout -b'
alias gcf='git config --list'
alias gcl='git clone --recurse-submodules'
alias gclean='git clean -id'
alias gpristine='git reset --hard && git clean -dfx'
alias gcm='git checkout master'
alias gcd='git checkout develop'
alias gcmsg='git commit -m'
alias gco='git checkout'
alias gcount='git shortlog -sn'
alias gcp='git cherry-pick'
alias gcpa='git cherry-pick --abort'
alias gcpc='git cherry-pick --continue'
alias gcs='git commit -S'

alias gd='git diff'
alias gdca='git diff --cached'
alias gdcw='git diff --cached --word-diff'
alias gdct='git describe --tags `git rev-list --tags --max-count=1`'
alias gds='git diff --staged'
alias gdt='git diff-tree --no-commit-id --name-only -r'
alias gdw='git diff --word-diff'

# gdv() { git diff -w "$@" | view - }

alias gf='git fetch'
alias gfa='git fetch --all --prune'
alias gfo='git fetch origin'

# function gfg() { git ls-files | grep $@ }

alias gg='git gui citool'
alias gga='git gui citool --amend'

# ggf() {
#   [[ "$#" != 1 ]] && local b="$(git_current_branch)"
#   git push --force origin "${b:=$1}"
# }
# ggfl() {
#   [[ "$#" != 1 ]] && local b="$(git_current_branch)"
#   git push --force-with-lease origin "${b:=$1}"
# }

# ggl() {
#   if [[ "$#" != 0 ]] && [[ "$#" != 1 ]]; then
#     git pull origin "${*}"
#   else
#     [[ "$#" == 0 ]] && local b="$(git_current_branch)"
#     git pull origin "${b:=$1}"
#   fi
# }

# ggp() {
#   if [[ "$#" != 0 ]] && [[ "$#" != 1 ]]; then
#     git push origin "${*}"
#   else
#     [[ "$#" == 0 ]] && local b="$(git_current_branch)"
#     git push origin "${b:=$1}"
#   fi
# }

# ggpnp() {
#   if [[ "$#" == 0 ]]; then
#     ggl && ggp
#   else
#     ggl "${*}" && ggp "${*}"
#   fi
# }

# ggu() {
#   [[ "$#" != 1 ]] && local b="$(git_current_branch)"
#   git pull --rebase origin "${b:=$1}"
# }

alias ggpur='ggu'

alias ggpull='git pull origin "$(git_current_branch)"'

alias ggpush='git push origin "$(git_current_branch)"'

alias ggsup='git branch --set-upstream-to=origin/$(git_current_branch)'
alias gpsup='git push --set-upstream origin $(git_current_branch)'

alias ghh='git help'

alias gignore='git update-index --assume-unchanged'
alias gignored='git ls-files -v | grep "^[[:lower:]]"'
alias git-svn-dcommit-push='git svn dcommit && git push github master:svntrunk'

alias gk='\gitk --all --branches'
alias gke='\gitk --all $(git log -g --pretty=%h)'

alias gl='git pull'
alias glg='git log --stat'
alias glgp='git log --stat -p'
alias glgg='git log --graph'
alias glgga='git log --graph --decorate --all'
alias glgm='git log --graph --max-count=10'
alias glo='git log --oneline --decorate'
alias glol="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'"
alias glols="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --stat"
alias glod="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset'"
alias glods="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --date=short"
alias glola="git log --graph --pretty='%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --all"
alias glog='git log --oneline --decorate --graph'
alias gloga='git log --oneline --decorate --graph --all'
alias glp="_git_log_prettily"

alias gm='git merge'
alias gmom='git merge origin/master'
alias gmt='git mergetool --no-prompt'
alias gmtvim='git mergetool --no-prompt --tool=vimdiff'
alias gmum='git merge upstream/master'
alias gma='git merge --abort'

alias gp='git push'
alias gpd='git push --dry-run'
alias gpf='git push --force-with-lease'
alias gpf!='git push --force'
alias gpoat='git push origin --all && git push origin --tags'
alias gpu='git push upstream'
alias gpv='git push -v'

alias gr='git remote'
alias gra='git remote add'
alias grb='git rebase'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbd='git rebase develop'
alias grbi='git rebase -i'
alias grbm='git rebase master'
alias grbs='git rebase --skip'
alias grh='git reset'
alias grhh='git reset --hard'
alias groh='git reset origin/$(git_current_branch) --hard'
alias grm='git rm'
alias grmc='git rm --cached'
alias grmv='git remote rename'
alias grrm='git remote remove'
alias grset='git remote set-url'
alias grt='cd "$(git rev-parse --show-toplevel || echo .)"'
alias gru='git reset --'
alias grup='git remote update'
alias grv='git remote -v'

alias gsb='git status -sb'
alias gsd='git svn dcommit'
alias gsh='git show'
alias gsi='git submodule init'
alias gsps='git show --pretty=short --show-signature'
alias gsr='git svn rebase'
alias gss='git status -s'
alias gst='git status'

# use the default stash push on git 2.13 and newer
# autoload -Uz is-at-least
# is-at-least 2.13 "$(git --version 2>/dev/null | awk '{print $3}')" \
#   && alias gsta='git stash push' \
#   || alias gsta='git stash save'

alias gstaa='git stash apply'
alias gstc='git stash clear'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash show --text'
alias gstall='git stash --all'
alias gsu='git submodule update'

alias gts='git tag -s'
alias gtv='git tag | sort -V'
alias gtl='gtl(){ git tag --sort=-v:refname -n -l ${1}* }; noglob gtl'

alias gunignore='git update-index --no-assume-unchanged'
alias gunwip='git log -n 1 | grep -q -c "\-\-wip\-\-" && git reset HEAD~1'
alias gup='git pull --rebase'
alias gupv='git pull --rebase -v'
alias gupa='git pull --rebase --autostash'
alias gupav='git pull --rebase --autostash -v'
alias glum='git pull upstream master'

alias gwch='git whatchanged -p --abbrev-commit --pretty=medium'
alias gwip='git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign -m "--wip-- [skip ci]"'
